<?php

include_once('../../../global.php');

class App extends App_Admin_Ajax
{
    private $id;
    private $tpDueDate;
    private $tpTotalAmount;
    private $hcDueDate;
    private $hcTotalAmount;
    private $info;
    private $newStep;

    protected function getPara()
    {
        $this->id = Tool_Input::clean('r', 'id', TYPE_UINT);
        $this->tpDueDate = Tool_Input::clean('r', 'tp_due_date', TYPE_UINT);
        $this->tpTotalAmount = Tool_Input::clean('r', 'tp_total_amount', TYPE_NUM);
        $this->hcDueDate = Tool_Input::clean('r', 'hc_due_date', TYPE_UINT);
        $this->hcTotalAmount = Tool_Input::clean('r', 'hc_total_amount', TYPE_NUM);
        $this->newStep = Tool_Input::clean('r', 'new_step', TYPE_INT);
    }

    protected function checkAuth()
    {
        parent::checkAuth('/activity/edit_finance_apply'); // TODO: Change the autogenerated stub
    }

    protected function checkPara()
    {
        if (empty($this->id))
        {
            throw new Exception('common:params error');
        }

        $this->info = Tpfinance_Api::get($this->id);
        switch ($this->newStep)
        {
            case Conf_Ex_Finance::APPLY_STEP_THIRD_PARTY_PASS:
                if (empty($this->tpTotalAmount) || $this->tpTotalAmount < 0)
                {
                    throw new Exception('finance: tp total amount can not be empty');
                }
                if (empty($this->tpDueDate))
                {
                    throw new Exception('finance: tp due date can not be empty');
                }
                break;
            case Conf_Ex_Finance::APPLY_STEP_HAOCAI_PASS:
                if (empty($this->hcTotalAmount) || $this->hcTotalAmount < 0)
                {
                    throw new Exception('finance: hc total amount can not be empty');
                }
                if ($this->hcTotalAmount > $this->info['tp_total_amount'])
                {
                    throw new Exception('finance: hc total amount can not be bigger than tp');
                }
                if (empty($this->hcDueDate))
                {
                    throw new Exception('finance: hc due date can not be empty');
                }
                if ($this->hcDueDate > $this->info['tp_due_date'])
                {
                    throw new Exception('finance: hc due date can not be bigger than tp');
                }
                break;
            default:
                //nothing
        }

        //转换成分
        $this->tpTotalAmount  *= 100;
        $this->hcTotalAmount *= 100;
    }

    protected function main()
    {
        switch ($this->newStep)
        {
            case Conf_Ex_Finance::APPLY_STEP_THIRD_PARTY_REJECTED:
                Tpfinance_Api::tpRefuse($this->id, $this->_uid);
                break;
            case Conf_Ex_Finance::APPLY_STEP_HAOCAI_REJECTED:
                Tpfinance_Api::refuse($this->id, $this->_uid);
                break;
            case Conf_Ex_Finance::APPLY_STEP_THIRD_PARTY_PASS:
                Tpfinance_Api::tpPass($this->id, $this->tpTotalAmount, $this->tpDueDate, $this->_uid);
                break;
            case Conf_Ex_Finance::APPLY_STEP_HAOCAI_PASS:
                Tpfinance_Api::pass($this->id, $this->hcTotalAmount, $this->hcDueDate, $this->_uid);
                break;
            case Conf_Ex_Finance::APPLY_STEP_CREDIT_GRANTING:
                Tpfinance_Api::credit($this->id, $this->_uid);
                break;
        }
    }

    protected function outputPage()
    {
        $result = array('id' => $this->id);

        $response = new Response_Ajax();
        $response->setContent($result);
        $response->send();
        exit;
    }
}

$app = new App('pri');
$app->run();