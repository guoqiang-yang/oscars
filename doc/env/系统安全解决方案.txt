*********************************************************
*                                                       *
*   安全相关的逻辑目前都在include/safe/Safe_Api里       *
*   如果考虑新增安全策略，也请放在这个文件里            *
*   严禁将安全策略方法散落在各个业务模块中              *
*                                                       *
*********************************************************

1、管理后台敏感页面添加每天访问次数限制
    敏感页面包括：
        '/order/order_detail.php',
        '/order/edit_order.php',
        '/order/order_print.php',
        '/crm2/customer_list.php',
        '/crm2/customer_detail.php',
        '/crm2/edit_customer.php',
    实现思路：
        a、如果用户访问的页面（取$_SERVER['SCRIPT_URL']）是以上页面其中之一，那么就对访问进行次数限制；
        b、考虑到客服下单，编辑，查看订单有可能多次操作一个订单，所以每次访问订单/客户的时候，都用订单
            id/客户id和当前管理员id为key，在memcache里做了一条记录；如果发现管理员重复访问某一个订单/客户，
            则不会累计次数限制；
        c、如果访问的是新的订单id/客户id，则先在memcache里记录对应的信息，然后再查看t_kvstore里是否有对应的
            记录，以及对应记录的最后更新时间是否早于今天0点；从而对t_kvstore里的值进行更新或者累加；
        d、如果访问敏感页面次数达到上限，再次访问敏感页面则会跳转到“访问太快”的提示页面；

    *清除限制示例：
         update t_kvstore set value=1 where name="admin_page_limit_1056";


2、短信防刷：【done】
    1、每个手机号每天发送10条验证码，超过则不发；
    2、每个IP每天发送30条验证码，超过则不发；
    3、每个小时发送验证码最多100条，超过之后短信报警；
    4、通知类短信每天发送上限2000条，超过之后短信报警；