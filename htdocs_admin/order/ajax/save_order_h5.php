<?php

include_once('../../../global.php');

class App extends App_Admin_Ajax
{
    private $oid;
    private $cid;
    private $uid;
    private $info1;
    private $deliveryDate;
    private $deliveryTime;
    private $diliveryEndTime;
    private $zitiDate;
    private $zitiTimeStart;
    private $zitiTimeEnd;
    private $communityInfo;
    private $address_id;

    protected function checkAuth()
    {
        parent::checkAuth('/order/add_order_logistics_h5'); // TODO: Change the autogenerated stub
    }

    protected function getPara()
    {
        $this->oid = Tool_Input::clean('r', 'oid', TYPE_UINT);
        $this->cid = Tool_Input::clean('r', 'cid', TYPE_UINT);
        $this->uid = Tool_Input::clean('r', 'uid', TYPE_UINT);
        $this->info1 = array(
            'delivery_type' => Tool_Input::clean('r', 'delivery_type', TYPE_UINT),
            'contact_name' => Tool_Input::clean('r', 'contact_name', TYPE_STR),
            'contact_phone' => Tool_Input::clean('r', 'contact_phone', TYPE_STR),
            'wid' => Tool_Input::clean('r', 'wid', TYPE_UINT),
            'community_id' => Tool_Input::clean('r', 'community_id', TYPE_UINT),
            'addr_detail' => Tool_Input::clean('r', 'addr_detail', TYPE_STR),
        );
        $this->deliveryDate = Tool_Input::clean('r', 'delivery_date', TYPE_STR);
        $this->deliveryTime = Tool_Input::clean('r', 'delivery_time', TYPE_STR);
        $this->diliveryEndTime = Tool_Input::clean('r', 'delivery_end_time', TYPE_STR);
        $this->zitiDate = Tool_Input::clean('r', 'ziti_date', TYPE_STR);
        $this->zitiTimeStart = Tool_Input::clean('r', 'ziti_time', TYPE_UINT);
        $this->zitiTimeEnd = Tool_Input::clean('r', 'ziti_time_end', TYPE_UINT);
        $this->address_id = Tool_Input::clean('r', 'address_id', TYPE_UINT);

        $source = Tool_Input::clean('r', 'source', TYPE_UINT);
        if ($source == Conf_Order::SOURCE_QIANG_GONG_ZHANG)
        {
            $this->info1['source'] = $source;
        }

        // address 由小区和具体楼号门牌号两部分组成
        $this->info1['address'] = $this->info1['addr_detail'];
        
    }

    protected function checkPara()
    {
        if (empty($this->uid) || empty($this->cid))
        {
            throw new Exception('用户信息错误！');
        }
        if (empty($this->info1['delivery_type']))
        {
            throw new Exception('请选择送货方式！');
        }
        if (empty($this->info1['wid']))
        {
            throw new Exception('请选择仓库！');
        }
        if ($this->info1['delivery_type'] == Conf_Order::DELIVERY_EXPRESS)
        {
            if (empty($this->info1['addr_detail']))
            {
                throw new Exception('请选择配送地址！');
            }
            if (empty($this->info1['contact_name']))
            {
                throw new Exception('请填收货人！');
            }
            if (empty($this->info1['contact_phone']))
            {
                throw new Exception('请填写收货电话！');
            }
            if (empty($this->deliveryDate))
            {
                throw new Exception('请填写配送日期！');
            }
            if (empty($this->deliveryDate))
            {
                throw new Exception('请填写配送日期！');
            }
            if (empty($this->deliveryTime) || empty($this->diliveryEndTime))
            {
                throw new Exception('请填写配送时间！');
            }
        }
        else if ($this->info1['delivery_type'] == Conf_Order::DELIVERY_BY_YOURSELF)
        {
            if (empty($this->zitiDate))
            {
                throw new Exception('请选择自提日期！');
            }
            if (empty($this->zitiTimeStart))
            {
                throw new Exception('请选择自提时间！');
            }
            if (empty($this->zitiTimeEnd))
            {
                throw new Exception('请选择自提时间！');
            }
        }
        else if ($this->info1['delivery_type'] == Conf_Order::DELIVERY_QUICKLY)
        {
            if (empty($this->info1['community_id']))
            {
                throw new Exception('请选择小区！');
            }
            if (empty($this->info1['addr_detail']))
            {
                throw new Exception('请填写门牌号！');
            }
            if (empty($this->info1['contact_name']))
            {
                throw new Exception('请填收货人！');
            }
            if (empty($this->info1['contact_phone']))
            {
                throw new Exception('请填写收货电话！');
            }
        }

        unset($this->info1['addr_detail']);
    }

    protected function main()
    {
        $cityInfo = City_Api::getCity();
        $oo = new Order_Order();
        if ($cityInfo['city_id'] == Conf_City::CHONGQING)
        {
            //配送方式
            if ($this->info1['delivery_type'] == Conf_Order::DELIVERY_QUICKLY)  //尽快送达
            {
                //0:00~7:00下单并支付，当日9:00~11:00安排送达；
                //7:01~18:00下单并支付，4小时内送达；
                //18:01~24:00下单并支付，次日9:00~11:00安排送达；
                $hour = date('G');
                if ($hour >= 0 && $hour <= 7)
                {
                    $this->info1['delivery_date'] = date('Y-m-d 9:00:00', time());
                    $this->info1['delivery_date_end'] = date('Y-m-d 11:00:00', time());
                }
                else if ($hour >= 8 && $hour < 18)
                {
                    $startTime = time() + 2 * 3600;
                    $endTime = time() + 4 * 3600;
                    $this->info1['delivery_date'] = date('Y-m-d H:00:00', $startTime);
                    $this->info1['delivery_date_end'] = date('Y-m-d H:00:00', $endTime);
                }
                else
                {
                    $tomorrow = strtotime('tomorrow');
                    $this->info1['delivery_date'] = date('Y-m-d 9:00:00', $tomorrow);
                    $this->info1['delivery_date_end'] = date('Y-m-d 11:00:00', $tomorrow);
                }
            }
            else if ($this->info1['delivery_type'] == Conf_Order::DELIVERY_BY_YOURSELF)
            {
                $this->zitiTimeStart || $this->zitiTimeStart = 18;
                $this->zitiTimeEnd || $this->zitiTimeEnd = 20;
                $startTime = strtotime($this->zitiDate) + $this->zitiTimeStart * 3600;
                $endTime = strtotime($this->zitiDate) + $this->zitiTimeEnd * 3600;
                $this->info1['delivery_date'] = date('Y-m-d H:00:00', $startTime);
                $this->info1['delivery_date_end'] = date('Y-m-d H:00:00', $endTime);
            }
            else if ($this->info1['delivery_type'] == Conf_Order::DELIVERY_EXPRESS)
            {
                $hour = date('G');
                if ($hour >= 0 && $hour < 16)
                {
                    if ($this->deliveryDate <= date('Y-m-d'))
                    {
                        $this->deliveryDate = date('Y-m-d');
                    }
                    $date = strtotime($this->deliveryDate);
                    $startTime = $date + 18 * 3600;
                    $endTime = $date + 20 * 3600;
                    $this->info1['delivery_date'] = date('Y-m-d H:00:00', $startTime);
                    $this->info1['delivery_date_end'] = date('Y-m-d H:00:00', $endTime);
                }
                else
                {
                    if ($this->deliveryDate <= date('Y-m-d'))
                    {
                        $this->deliveryDate = date('Y-m-d', strtotime('tomorrow'));
                    }
                    $date = strtotime($this->deliveryDate);
                    $startTime = $date + 18 * 3600;
                    $endTime = $date + 20 * 3600;
                    $this->info1['delivery_date'] = date('Y-m-d H:00:00', $startTime);
                    $this->info1['delivery_date_end'] = date('Y-m-d H:00:00', $endTime);
                }
            }
        }

        if ($this->oid && $this->info1['delivery_type'] != Conf_Order::DELIVERY_BY_YOURSELF)
        {
            $info = array(
                'cid' => $this->cid,
                'uid' => $this->uid,
                'city' => $this->communityInfo['city'],
                'district' => $this->communityInfo['district'],
                'area' => $this->communityInfo['area'],
                'ring_road' => $this->communityInfo['ring_road'],
                'address' => $this->info1['address'],
                'community_id' => $this->info1['community_id'],
                'contact_name' => $this->info1['contact_name'],
                'contact_phone' => $this->info1['contact_phone'],
            );

            $siteId = Crm2_Api::saveConstructionSite($info);
            $this->info1['construction'] = $siteId;
        }

        $this->info1['cid'] = $this->cid;
        $this->info1['uid'] = $this->uid;
        if ($this->info1['delivery_type'] == Conf_Order::DELIVERY_BY_YOURSELF){
            $this->info1['delivery_date'] = $this->zitiDate . ' ' . $this->zitiTimeStart;
            $this->info1['delivery_date_end'] = $this->zitiDate . ' ' . $this->zitiTimeEnd;
        } else {
            $this->info1['delivery_date'] = $this->deliveryDate . ' ' . $this->deliveryTime;
            $this->info1['delivery_date_end'] = $this->deliveryDate . ' ' . $this->diliveryEndTime;
        }
        $customer = Crm2_Api::getCustomerInfo($this->cid);
        $this->info1['saler_suid'] = intval($customer['customer']['sales_suid']);
        $this->info1['suid'] = $this->_uid;
        $this->info1['has_duty'] = $customer['customer']['has_duty'];
        $this->info1['source'] = Conf_Order::SOURCE_KEFU;
        $this->info1['city_id'] = $cityInfo['city_id'];
        $this->info1['customer_payment_type'] = Conf_Base::CUSTOMER_PT_ONLINE_PAY;
        $construction = Crm2_Api::getConstructionSite($this->address_id);
        $this->info1['city'] = $cityInfo['city_id'];
        $this->info1['district'] = $construction['district'];
        $this->info1['area'] = $construction['area'];
        if (empty($this->oid))
        {
            $this->oid = $oo->add($this->info1);
        }
        else
        {
            $oo->update($this->oid, $this->info1);
        }
    }

    protected function outputPage()
    {
        $result = array('oid' => $this->oid);

        $response = new Response_Ajax();
        $response->setContent($result);
        $response->send();

        exit;
    }
}

$app = new App('pri');
$app->run();